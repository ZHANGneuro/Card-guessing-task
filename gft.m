% This script implements a card guessing task described in: 
% Xue, G., et al. (2012). "Lateral prefrontal cortex contributes to maladaptive decisions." 
% Proceedings of the National Academy of Sciences 109(12): 4401-4406.
% 
% In this task,  subjects are to predict computer's choice of a black or red card.
% 
% Computer's choices were a predetermined canonical random sequence generated by a 
% Bernoulli process characterized by 
% (i) equal numbers of black and red cards, 
% (ii) switch of card choice on half the trials,  
% (iii) streak length in an exponential distribution.
% 
% This task contains two runs, in each run, the computer has 63 predetermined choices, in the first run the computer's choice 
% consists of 31 black cards and 32 red cards, in the second run it includes 32 black cards and 31 red cards.
% 
% Note in Xue's Paper, just 1 carefully picked and predetermined computers' choice sequence was generated and was used for all subjects.
% 
% In this task, Inter-stimuli interval was set to 1s (9s in Xue's paper).
% 
% Subject press "Q" for choosing the left card, and press "P" for choosing the right one. 
% 
% Bo 31st December 2013 - bozhang.neuro@gmail.com



function gft ()

Screen('Preference', 'SkipSyncTests', 1);
[wPtr,wRect] = Screen('OpenWindow', 0);
w = wRect(RectRight);
h = wRect(RectBottom);
screen_resolution = get(0,'ScreenSize');
font_size = round(sqrt(screen_resolution(3)))-20;
font_size_note = font_size+10;
KbName('UnifyKeyNames');
HideCursor(0);
quitkey = KbName('escape');
spacekey = KbName('SPACE');
left_key = KbName('Q');
right_key = KbName('P');
card1 = imread('./image/1.jpg');
card2 = imread('./image/2.jpg');
card3 = imread('./image/0.jpg');

[y, x, depth] = size(card1);
x = w/8;
y= (10*w/8)*1/7;
x_top = w/18;
y_top = (10*w/18)/7;
t_top_black = Screen('MakeTexture', wPtr, card1);
t_top_red = Screen('MakeTexture', wPtr, card2);

img = imread('./image/inst.png');
[ins_y, ins_x, depth] = size(img);
ins_x = ins_x/1.7;
ins_y = ins_y/1.7;
t_ins = Screen('MakeTexture', wPtr, img);
Screen('DrawTexture', wPtr, t_ins, [],  [(w-ins_x)/2 (h-ins_y)/2 (w-ins_x)/2+ins_x (h-ins_y)/2+ins_y]);
Screen('Flip',wPtr);
while 1
    [secs, keyCode, deltaSecs] = KbWait;
    if keyCode(spacekey)
        break;
    end
    if keyCode(quitkey)
        Screen(wPtr,'Close');
        close all
        return;
    end
end

pre_result = cell(126,3);


for n = 1:126
    rand_card = randsample([1,2],1);
    if rand_card == 1
        img1 = card1;
        img2 = card2;
    end
    if rand_card == 2
        img1 = card2;
        img2 = card1;
    end
    if n == 64
        img = imread('./image/inst2.png');
        [ins_y, ins_x, depth] = size(img);
        ins_x = ins_x/1.7;
        ins_y = ins_y/1.7;
        t_ins = Screen('MakeTexture', wPtr, img);
        Screen('DrawTexture', wPtr, t_ins, [],  [(w-ins_x)/2 (h-ins_y)/2 (w-ins_x)/2+ins_x (h-ins_y)/2+ins_y]);
        Screen('Flip',wPtr);
        while 1
            [secs, keyCode, deltaSecs] = KbWait;
            if keyCode(spacekey)
                break;
            end
            if keyCode(quitkey)
                Screen(wPtr,'Close');
                close all
                return;
            end
        end
    end
    ISI_cross(wPtr,h, font_size_note);
    t1 = Screen('MakeTexture', wPtr, img1);
    t2 = Screen('MakeTexture', wPtr, img2);
    t3 = Screen('MakeTexture', wPtr, card3);
    Screen('DrawTexture', wPtr, t1, [], [w/2-400*w/1000, h/2-50*w/1000, w/2-400*w/1000+x, h/2-50*w/1000+y]);
    Screen('DrawTexture', wPtr, t2, [], [w/2+400*w/1000-x, h/2-50*w/1000, w/2+400*w/1000, h/2-50*w/1000+y]);
    Screen('FillRect', wPtr, [186 186 186], [w/2-x/2, h/2+6*h/100-y, w/2+x/2, h/2+6*h/100]);
    Screen('FillRect', wPtr, [186 186 186], [w/2-x/2, h/2+8*h/100, w/2+x/2, h/2+8*h/100+y]);
    Screen('TextSize',wPtr, font_size);
    [nx, ny, bbox] = DrawFormattedText(wPtr, 'Robot Choice', 'center', h/2+6*h/100-y+y/2, 0);
    [nx, ny, bbox] = DrawFormattedText(wPtr, 'Your Choice', 'center', h/2+8*h/100+y/2, 0);
    Screen('TextSize',wPtr, font_size_note);
    [nx, ny, bbox] = DrawFormattedText(wPtr, 'Wait Robot to play', 'center', h/2+8*h/100+y+3*h/100, 0);
    most_recent_robot_choice(wPtr, n, w, x_top, h, y_top, pre_result, t_top_black, t_top_red)
    Screen('Flip',wPtr);
    WaitSecs (1);
    
    Screen('DrawTexture', wPtr, t1, [], [w/2-400*w/1000, h/2-50*w/1000, w/2-400*w/1000+x, h/2-50*w/1000+y]);
    Screen('DrawTexture', wPtr, t2, [], [w/2+400*w/1000-x, h/2-50*w/1000, w/2+400*w/1000, h/2-50*w/1000+y]);
    Screen('DrawTexture', wPtr, t3, [], [w/2-x/2, h/2+6*h/100-y, w/2+x/2, h/2+6*h/100]);
    Screen('FillRect', wPtr, [186 186 186], [w/2-x/2, h/2+8*h/100, w/2+x/2, h/2+8*h/100+y]);
    Screen('TextSize',wPtr, font_size);
    [nx, ny, bbox] = DrawFormattedText(wPtr, 'Your Choice', 'center', h/2+8*h/100+y/2, 0);
    Screen('TextSize',wPtr, font_size_note);
    [nx, ny, bbox] = DrawFormattedText(wPtr, 'Please choose a card within 2 seconds', 'center', h/2+8*h/100+y+3*h/100, 0);
    most_recent_robot_choice(wPtr, n, w, x_top, h, y_top, pre_result, t_top_black, t_top_red)
    start_time = Screen('Flip',wPtr);
    
    while GetSecs - start_time < 2
        [keyIsDown, secs, keyCode, deltaSecs] = KbCheck;
        if keyCode(left_key)
            pre_result{n,3} = GetSecs - start_time;
            Screen('DrawTexture', wPtr, t1, [], [w/2-400*w/1000, h/2-50*w/1000, w/2-400*w/1000+x, h/2-50*w/1000+y]);
            Screen('DrawTexture', wPtr, t2, [], [w/2+400*w/1000-x, h/2-50*w/1000, w/2+400*w/1000, h/2-50*w/1000+y]);
            Screen('DrawTexture', wPtr, t3, [], [w/2-x/2, h/2+6*h/100-y, w/2+x/2, h/2+6*h/100]);
            Screen('DrawTexture', wPtr, t3, [], [w/2-x/2, h/2+8*h/100, w/2+x/2, h/2+8*h/100+y]);
            Screen('TextSize',wPtr, font_size_note);
            [nx, ny, bbox] = DrawFormattedText(wPtr, 'Please Wait . . . .', 'center', h/2+8*h/100+y+3*h/100, 0);
            temporal_selected_card = t1;
            if rand_card == 1
                pre_result{n, 2} = 'Black';
            end
            if rand_card == 2
                pre_result{n, 2} = 'Red';
            end
            most_recent_robot_choice(wPtr, n, w, x_top, h, y_top, pre_result, t_top_black, t_top_red)
            Screen('Flip',wPtr);
            WaitSecs(0.5)
            break;
        end
        if keyCode(right_key)
            pre_result{n,3} = GetSecs - start_time;
            Screen('DrawTexture', wPtr, t1, [], [w/2-400*w/1000, h/2-50*w/1000, w/2-400*w/1000+x, h/2-50*w/1000+y]);
            Screen('DrawTexture', wPtr, t2, [], [w/2+400*w/1000-x, h/2-50*w/1000, w/2+400*w/1000, h/2-50*w/1000+y]);
            Screen('DrawTexture', wPtr, t3, [], [w/2-x/2, h/2+6*h/100-y, w/2+x/2, h/2+6*h/100]);
            Screen('DrawTexture', wPtr, t3, [], [w/2-x/2, h/2+8*h/100, w/2+x/2, h/2+8*h/100+y]);
            Screen('TextSize',wPtr, font_size_note);
            [nx, ny, bbox] = DrawFormattedText(wPtr, 'Please Wait . . . .', 'center', h/2+8*h/100+y+3*h/100, 0);
            temporal_selected_card = t2;
            if rand_card == 1
                pre_result{n, 2} = 'Red';
            end
            if rand_card == 2
                pre_result{n, 2} = 'Black';
            end
            most_recent_robot_choice(wPtr, n, w, x_top, h, y_top, pre_result, t_top_black, t_top_red)
            Screen('Flip',wPtr);
            WaitSecs(0.5)
            break;
        end
        if keyCode(quitkey)
            Screen(wPtr,'Close');
            close all
            return;
        end
    end
    
    if ~keyCode(left_key) && ~keyCode(right_key)
        temporal_selected_card = 0;
    end
    
    
    Choices = ['B' 'A' 'A' 'B' 'A' 'B' 'A' 'B' 'B' 'B' 'B' 'B' 'A' 'B' 'B' 'A' 'B' 'A' 'B' 'B' 'B' 'B' 'A' 'A' 'B' 'A' 'A' 'A' 'B' 'A' 'A' 'A' 'A' 'A' 'A' ...
        'B' 'B' 'A' 'A' 'B' 'A' 'A' 'B' 'B' 'A' 'A' 'A' 'B' 'B' 'B' 'B' 'A' 'B' 'A' 'B' 'B' 'B' 'A' 'B' 'B' 'A' 'A' 'A' 'A' 'B' 'B' 'A' 'B' 'A' 'B' 'A' 'A' 'A' 'A' ...
        'A' 'B' 'A' 'A' 'B' 'A' 'B' 'A' 'A' 'A' 'A' 'B' 'B' 'A' 'B' 'B' 'B' 'A' 'B' 'B' 'B' 'B' 'B' 'B' 'A' 'A' 'B' 'B' 'A' 'B' 'B' 'A' 'A' 'B' 'B' 'B' 'A' 'A' 'A' ...
        'A' 'B' 'A' 'B' 'A' 'A' 'A' 'B' 'A' 'A' 'B' 'B' 'B'];
    
    computer_choice = Choices(n);
    if computer_choice == 'A' && rand_card == 1
        t3 = t1;
        pre_result{n, 1} = 'Black';
    end
    if computer_choice == 'A' && rand_card == 2
        t3 = t2;
        pre_result{n, 1} = 'Black';
    end
    if computer_choice == 'B' && rand_card == 1
        t3 = t2;
        pre_result{n, 1} = 'Red';
    end
    if computer_choice == 'B' && rand_card == 2
        t3 = t1;
        pre_result{n, 1} = 'Red';
    end
    
    
    if temporal_selected_card~=0
        Screen('DrawTexture', wPtr, t3, [], [w/2-x/2, h/2+6*h/100-y, w/2+x/2, h/2+6*h/100]);
        Screen('DrawTexture', wPtr, temporal_selected_card, [], [w/2-x/2, h/2+8*h/100, w/2+x/2, h/2+8*h/100+y]);
        Screen('TextSize',wPtr, font_size_note);
        if t3 == temporal_selected_card
            [nx, ny, bbox] = DrawFormattedText(wPtr, 'You Win!', 'center', h/2+8*h/100+y+3*h/100, 0);
        end
        if t3 ~= temporal_selected_card
            [nx, ny, bbox] = DrawFormattedText(wPtr, 'You Lose!', 'center', h/2+8*h/100+y+3*h/100, 0);
        end
        most_recent_robot_choice(wPtr, n, w, x_top, h, y_top, pre_result, t_top_black, t_top_red)
        Screen('Flip',wPtr);
        WaitSecs(1)
    end
    if temporal_selected_card==0
        Screen('DrawTexture', wPtr, t3, [], [w/2-x/2, h/2+6*h/100-y, w/2+x/2, h/2+6*h/100]);
        Screen('FillRect', wPtr, [186 186 186], [w/2-x/2, h/2+8*h/100, w/2+x/2, h/2+8*h/100+y]);
        Screen('TextSize',wPtr, font_size);
        [nx, ny, bbox] = DrawFormattedText(wPtr, 'No choice was made', 'center', h/2+8*h/100+y/2, 0);
        Screen('TextSize',wPtr, font_size_note);
        [nx, ny, bbox] = DrawFormattedText(wPtr, 'You Lose !', 'center', h/2+8*h/100+y+3*h/100, 0);
        most_recent_robot_choice(wPtr, n, w, x_top, h, y_top, pre_result, t_top_black, t_top_red)
        Screen('Flip',wPtr);
        WaitSecs(1)
    end
end

header = {'Robot Choices', 'Subject Choice', 'RT'};
pre_result_table = [header; pre_result];
folder = './result';
save([folder '/result.mat'], 'pre_result_table');

img = imread('./image/end.png');
[ins_y, ins_x, depth] = size(img);
ins_x = ins_x/1.5;
ins_y = ins_y/1.5;
t_ins = Screen('MakeTexture', wPtr, img);
Screen('DrawTexture', wPtr, t_ins, [],  [(w-ins_x)/2 (h-ins_y)/2 (w-ins_x)/2+ins_x (h-ins_y)/2+ins_y]);
Screen('Flip',wPtr);
while 1
    [keyIsDown, secs, keyCode, deltaSecs] = KbCheck;
    if keyCode(quitkey)
        Screen(wPtr,'Close');
        close all
        return;
    end
end

end

